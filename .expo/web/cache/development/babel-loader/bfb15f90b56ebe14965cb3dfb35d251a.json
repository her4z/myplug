{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\proyectos\\\\MyIdealPlug\\\\app\\\\components\\\\login.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport stylesLogin from \"../styles/login_css\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport * as Font from 'expo-font';\nimport { Button } from 'react-native-elements';\n\nvar Login = function (_React$Component) {\n  _inherits(Login, _React$Component);\n\n  var _super = _createSuper(Login);\n\n  function Login() {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      user: '',\n      password: '',\n      isButtonLoading: false\n    };\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadFonts();\n    }\n  }, {\n    key: \"loadFonts\",\n    value: function loadFonts() {\n      return _regeneratorRuntime.async(function loadFonts$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Font.loadAsync({\n                'Raleway-Light': {\n                  uri: require(\"../assets/fonts/Raleway-Light.ttf\")\n                },\n                'Raleway-Medium': {\n                  uri: require(\"../assets/fonts/Raleway-Medium.ttf\")\n                },\n                'Roboto-Regular': {\n                  uri: require(\"../assets/fonts/Roboto-Regular.ttf\")\n                }\n              }));\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: stylesLogin.login,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }\n      }, React.createElement(Image, {\n        source: require(\"../assets/logo1.png\"),\n        style: stylesLogin.logo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }\n      }), React.createElement(Text, {\n        style: stylesLogin.brand,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }\n      }, \"My Plu\"), React.createElement(TextInput, {\n        style: stylesLogin.textinputUser,\n        placeholder: \" User\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }\n      }), React.createElement(TextInput, {\n        style: stylesLogin.textinputPassword,\n        placeholder: \" Password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }\n      }), React.createElement(View, {\n        style: stylesLogin.buttonLogin,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }\n      }, React.createElement(Button, {\n        title: \"Log in\",\n        type: \"solid\",\n        loading: this.state.isButtonLoading,\n        onPress: function onPress() {\n          return _this2.setState({\n            isButtonLoading: true\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }\n      })));\n    }\n  }]);\n\n  return Login;\n}(React.Component);\n\nexport default Login;","map":{"version":3,"sources":["D:/proyectos/MyIdealPlug/app/components/login.tsx"],"names":["React","stylesLogin","Font","Button","Login","state","user","password","isButtonLoading","loadFonts","loadAsync","uri","require","login","logo","brand","textinputUser","textinputPassword","buttonLogin","setState","Component"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP;;;;;AAEA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;AAEA,SAASC,MAAT,QAAuB,uBAAvB;;IAEMC,K;;;;;;;;;;;;;;;UAEFC,K,GAAM;AACFC,MAAAA,IAAI,EAAE,EADJ;AAEFC,MAAAA,QAAQ,EAAE,EAFR;AAGFC,MAAAA,eAAe,EAAE;AAHf,K;;;;;;wCAMa;AACf,WAAKC,SAAL;AACH;;;;;;;;;+CAGSP,IAAI,CAACQ,SAAL,CAAe;AACjB,iCAAgB;AACZC,kBAAAA,GAAG,EAAEC,OAAO;AADA,iBADC;AAIjB,kCAAiB;AACbD,kBAAAA,GAAG,EAAEC,OAAO;AADC,iBAJA;AAOjB,kCAAiB;AACbD,kBAAAA,GAAG,EAAEC,OAAO;AADC;AAPA,eAAf,C;;;;;;;;;;;6BAaF;AAAA;;AACJ,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEX,WAAW,CAACY,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,MAAM,EAAED,OAAO,uBAAtB;AAA+C,QAAA,KAAK,EAAEX,WAAW,CAACa,IAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEb,WAAW,CAACc,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAGI,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAEd,WAAW,CAACe,aAA9B;AAA6C,QAAA,WAAW,EAAC,OAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,EAII,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAEf,WAAW,CAACgB,iBAA9B;AAAiD,QAAA,WAAW,EAAC,WAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,EAKI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEhB,WAAW,CAACiB,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,QAAd;AAAuB,QAAA,IAAI,EAAC,OAA5B;AAAoC,QAAA,OAAO,EAAE,KAAKb,KAAL,CAAWG,eAAxD;AAAyE,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACW,QAAL,CAAc;AAACX,YAAAA,eAAe,EAAE;AAAlB,WAAd,CAAN;AAAA,SAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CALJ,CADJ;AAWH;;;;EAtCeR,KAAK,CAACoB,S;;AAwC1B,eAAehB,KAAf","sourcesContent":["import React from 'react';\r\nimport stylesLogin from '../styles/login_css';\r\nimport { View, TextInput, Image, Text} from 'react-native';\r\nimport * as Font from 'expo-font';\r\n// import { useNavigation } from '@react-navigation/native';\r\nimport { Button } from 'react-native-elements';\r\n\r\nclass Login extends React.Component {\r\n\r\n    state={\r\n        user: '',\r\n        password: '',\r\n        isButtonLoading: false\r\n    };\r\n\r\n    componentDidMount(){\r\n        this.loadFonts();\r\n    }\r\n\r\n    async loadFonts(){\r\n        await Font.loadAsync({\r\n            'Raleway-Light':{\r\n                uri: require('../assets/fonts/Raleway-Light.ttf')\r\n            },\r\n            'Raleway-Medium':{\r\n                uri: require('../assets/fonts/Raleway-Medium.ttf')\r\n            },\r\n            'Roboto-Regular':{\r\n                uri: require('../assets/fonts/Roboto-Regular.ttf')\r\n            }\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <View style={stylesLogin.login}>\r\n                <Image source={require('../assets/logo1.png')} style={stylesLogin.logo}></Image>\r\n                <Text style={stylesLogin.brand}>My Plu</Text>\r\n                <TextInput style={stylesLogin.textinputUser} placeholder=\" User\"></TextInput>\r\n                <TextInput style={stylesLogin.textinputPassword} placeholder=\" Password\"></TextInput>\r\n                <View style={stylesLogin.buttonLogin}>\r\n                    <Button title=\"Log in\" type=\"solid\" loading={this.state.isButtonLoading} onPress={() => this.setState({isButtonLoading: true})}></Button>\r\n                </View>\r\n            </View>\r\n        )\r\n    }\r\n}\r\nexport default Login"]},"metadata":{},"sourceType":"module"}